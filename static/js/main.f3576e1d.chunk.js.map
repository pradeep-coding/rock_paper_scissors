{"version":3,"sources":["components/ChoiceItem/styledComponents.js","components/ChoiceItem/index.js","components/RockPaperScissors/styledComponents.js","components/RockPaperScissors/index.js","App.js","index.js"],"names":["SelectorImage","styled","img","SelectorButton","button","SelectorItem","li","ChoiceItem","props","choiceDetails","onClickChoice","id","imageUrl","testId","type","onClick","src","alt","AppContainer","div","ScoreStatusContainer","SelectorNamesContainer","SelectorName","h1","ScoreContainer","ScoreHeading","p","Score","SelectorsContainer","ul","RulesButton","ResultContainer","SelectedContainer","SelectedContainerItems","Contestant","SelectedImage","ResultStatus","PlayAgainButton","ModalContainer","RulesImage","CloseButton","RockPaperScissors","state","score","showSelectors","showResult","selectedChoice","computersChoice","resultState","increaseScore","setState","prevState","decreaseScore","choicesList","randomNumber","Math","floor","random","length","computerChosed","resultStatus","onClickPlayAgain","renderSelectorContainer","map","eachItem","scoreUpdate","status","renderResultContainer","userSelectedChoice","filter","computerSelectedChoice","this","modal","trigger","className","close","size","color","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3576e1d.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const SelectorImage = styled.img`\n  width: 130px;\n  height: 130px;\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 200px;\n  }\n`\n\nexport const SelectorButton = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  outline: none;\n`\n\nexport const SelectorItem = styled.li`\n  margin: auto;\n  margin-top: 40px;\n`\n","import {SelectorImage, SelectorItem, SelectorButton} from './styledComponents'\n\nconst ChoiceItem = props => {\n  const {choiceDetails, onClickChoice} = props\n  const {id, imageUrl} = choiceDetails\n  const onClickImage = () => {\n    onClickChoice(id)\n  }\n\n  let testId = ''\n  switch (id) {\n    case 'ROCK':\n      testId = 'rockButton'\n      break\n    case 'PAPER':\n      testId = 'paperButton'\n      break\n    default:\n      testId = 'scissorsButton'\n  }\n\n  return (\n    <SelectorItem>\n      <SelectorButton type=\"button\" onClick={onClickImage} data-testid={testId}>\n        <SelectorImage src={imageUrl} alt={id} />\n      </SelectorButton>\n    </SelectorItem>\n  )\n}\n\nexport default ChoiceItem\n","import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  min-height: 100vh;\n  background-color: #223a5f;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Bree Serif';\n  padding: 20px;\n`\nexport const ScoreStatusContainer = styled.div`\n  background-color: transparent;\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n  width: 90%;\n  height: 150px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 1110px;\n  }\n`\nexport const SelectorNamesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`\n\nexport const SelectorName = styled.h1`\n  color: #ffffff;\n  font-size: 24px;\n  margin: 0px;\n`\nexport const ScoreContainer = styled.div`\n  background-color: #ffffff;\n  width: 150px;\n  height: 100%;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n  }\n`\nexport const ScoreHeading = styled.p`\n  font-weight: 600;\n  color: #223a5f;\n  font-size: 22px;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`\nexport const Score = styled.p`\n  color: #223a5f;\n  font-size: 38px;\n  font-weight: 600;\n  margin: 0px;\n  font-family: 'Roboto';\n`\nexport const SelectorsContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  width: 350px;\n  list-style-type: none;\n  margin: 0px;\n  padding: 0px;\n  @media screen and (min-width: 768px) {\n    width: 500px;\n  }\n`\n\nexport const RulesButton = styled.button`\n  color: #223a5f;\n  background-color: #ffffff;\n  border: none;\n  width: 120px;\n  height: 60px;\n  font-family: 'Bree Serif';\n  font-size: 24px;\n  border-radius: 10px;\n  align-self: flex-end;\n  cursor: pointer;\n  outline: none;\n`\n\nexport const ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const SelectedContainer = styled.div`\n  display: flex;\n`\n\nexport const SelectedContainerItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nexport const Contestant = styled.h1`\n  color: #ffffff;\n  font-family: 'Roboto';\n  font-size: 24px;\n  text-align: center;\n`\nexport const SelectedImage = styled.img`\n  width: 130px;\n  height: 130px;\n  @media screen and (min-width: 768px) {\n    width: 230px;\n    height: 230px;\n  }\n`\n\nexport const ResultStatus = styled.p`\n  color: #ffffff;\n  font-size: 28px;\n  font-family: 'Roboto';\n  text-align: center;\n`\nexport const PlayAgainButton = styled.button`\n  background-color: #ffffff;\n  color: #223a5f;\n  font-family: 'Bree Serif';\n  width: 300px;\n  height: 80px;\n  border: none;\n  border-radius: 15px;\n  outline: none;\n  cursor: pointer;\n  font-size: 24px;\n`\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nexport const RulesImage = styled.img`\n  width: 80%;\n`\n\nexport const CloseButton = styled.button`\n  align-self: flex-end;\n  background-color: transparent;\n  width: 28px;\n  height: 28px;\n  border: none;\n  margin-top: 18px;\n  margin-right: 18px;\n  outline: none;\n  cursor: pointer;\n`\n","import Popup from 'reactjs-popup'\nimport {IoMdClose} from 'react-icons/io'\n\nimport 'reactjs-popup/dist/index.css'\n\nimport {Component} from 'react'\nimport ChoiceItem from '../ChoiceItem'\nimport {\n  AppContainer,\n  ScoreStatusContainer,\n  SelectorNamesContainer,\n  SelectorName,\n  ScoreContainer,\n  ScoreHeading,\n  Score,\n  SelectorsContainer,\n  RulesButton,\n  ResultContainer,\n  SelectedContainer,\n  SelectedContainerItems,\n  Contestant,\n  SelectedImage,\n  ResultStatus,\n  PlayAgainButton,\n  ModalContainer,\n  CloseButton,\n  RulesImage,\n} from './styledComponents'\n\nimport './index.css'\n\nclass RockPaperScissors extends Component {\n  state = {\n    score: 0,\n    showSelectors: true,\n    showResult: false,\n    selectedChoice: '',\n    computersChoice: '',\n    resultState: '',\n  }\n\n  increaseScore = () => {\n    this.setState(prevState => ({score: prevState.score + 1}))\n  }\n\n  decreaseScore = () => {\n    this.setState(prevState => ({score: prevState.score - 1}))\n  }\n\n  onClickChoice = id => {\n    const {choicesList} = this.props\n    const randomNumber = Math.floor(Math.random() * choicesList.length)\n    const computerChosed = choicesList[randomNumber].id\n\n    let resultStatus = ''\n    if (id === 'ROCK' && computerChosed === 'ROCK') {\n      resultStatus = 'IT IS DRAW'\n    } else if (id === 'ROCK' && computerChosed === 'PAPER') {\n      resultStatus = 'YOU LOSE'\n      this.decreaseScore()\n    } else if (id === 'ROCK' && computerChosed === 'SCISSORS') {\n      resultStatus = 'YOU WON'\n      this.increaseScore()\n    } else if (id === 'PAPER' && computerChosed === 'PAPER') {\n      resultStatus = 'IT IS DRAW'\n    } else if (id === 'PAPER' && computerChosed === 'ROCK') {\n      resultStatus = 'YOU WON'\n      this.increaseScore()\n    } else if (id === 'PAPER' && computerChosed === 'SCISSORS') {\n      resultStatus = 'YOU LOSE'\n      this.decreaseScore()\n    } else if (id === 'SCISSORS' && computerChosed === 'SCISSORS') {\n      resultStatus = 'IT IS DRAW'\n    } else if (id === 'SCISSORS' && computerChosed === 'ROCK') {\n      resultStatus = 'YOU LOSE'\n      this.decreaseScore()\n    } else {\n      resultStatus = 'YOU WON'\n      this.increaseScore()\n    }\n\n    this.setState(prevState => ({\n      showSelectors: !prevState.showSelectors,\n      showResult: !prevState.showResult,\n      selectedChoice: id,\n      computersChoice: choicesList[randomNumber].id,\n      resultState: resultStatus,\n    }))\n  }\n\n  onClickPlayAgain = () => {\n    this.setState(prevState => ({\n      showSelectors: !prevState.showSelectors,\n      showResult: !prevState.showResult,\n      selectedChoice: '',\n      computersChoice: '',\n    }))\n  }\n\n  renderSelectorContainer = () => {\n    const {showSelectors} = this.state\n    const {choicesList} = this.props\n    if (showSelectors === true) {\n      return (\n        <SelectorsContainer>\n          {choicesList.map(eachItem => (\n            <ChoiceItem\n              key={eachItem.id}\n              choiceDetails={eachItem}\n              onClickChoice={this.onClickChoice}\n            />\n          ))}\n        </SelectorsContainer>\n      )\n    }\n    return null\n  }\n\n  scoreUpdate = status => {\n    if (status === 'YOU WON') {\n      this.setState(prevState => ({score: prevState.score + 1}))\n    } else if (status === 'YOU LOSE') {\n      this.setState(prevState => ({score: prevState.score - 1}))\n    }\n  }\n\n  renderResultContainer = () => {\n    const {\n      showResult,\n      selectedChoice,\n      computersChoice,\n      resultState,\n    } = this.state\n\n    const {choicesList} = this.props\n    const userSelectedChoice = choicesList.filter(\n      eachItem => eachItem.id === selectedChoice,\n    )\n    const computerSelectedChoice = choicesList.filter(\n      eachItem => eachItem.id === computersChoice,\n    )\n\n    if (showResult === true) {\n      return (\n        <ResultContainer>\n          <SelectedContainer>\n            <SelectedContainerItems>\n              <Contestant>YOU</Contestant>\n              <SelectedImage\n                src={userSelectedChoice[0].imageUrl}\n                alt=\"your choice\"\n              />\n            </SelectedContainerItems>\n            <SelectedContainerItems>\n              <Contestant>OPPONENT</Contestant>\n              <SelectedImage\n                src={computerSelectedChoice[0].imageUrl}\n                alt=\"opponent choice\"\n              />\n            </SelectedContainerItems>\n          </SelectedContainer>\n          <ResultStatus>{resultState}</ResultStatus>\n          <PlayAgainButton onClick={this.onClickPlayAgain} type=\"button\">\n            PLAY AGAIN\n          </PlayAgainButton>\n        </ResultContainer>\n      )\n    }\n    return null\n  }\n\n  render() {\n    const {score} = this.state\n\n    return (\n      <>\n        <AppContainer>\n          <ScoreStatusContainer>\n            <SelectorNamesContainer>\n              <SelectorName>\n                ROCK <br />\n                PAPER <br />\n                SCISSORS\n              </SelectorName>\n            </SelectorNamesContainer>\n            <ScoreContainer>\n              <ScoreHeading>Score</ScoreHeading>\n              <Score>{score}</Score>\n            </ScoreContainer>\n          </ScoreStatusContainer>\n          {this.renderSelectorContainer()}\n          {this.renderResultContainer()}\n          <Popup\n            modal\n            trigger={<RulesButton>RULES</RulesButton>}\n            className=\"popup-content\"\n          >\n            {close => (\n              <ModalContainer>\n                <CloseButton type=\"button\" onClick={() => close()}>\n                  <IoMdClose size={20} color=\"#231f20\" />\n                </CloseButton>\n                <RulesImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n              </ModalContainer>\n            )}\n          </Popup>\n        </AppContainer>\n      </>\n    )\n  }\n}\n\nexport default RockPaperScissors\n","import RockPaperScissors from './components/RockPaperScissors'\nimport './App.css'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nconst App = () => <RockPaperScissors choicesList={choicesList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}